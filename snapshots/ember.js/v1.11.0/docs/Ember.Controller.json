{
  "name": "Ember.Controller",
  "description": "",
  "line": 11,
  "file": "packages/ember-runtime/lib/controllers/controller.js",
  "methods": [
    {
      "name": "init",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "destroy",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "willDestroy",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "_scheduledDestroy",
      "isPrivate": true,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "toString",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "extend",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "createWithMixins",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "create",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "reopen",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "reopenClass",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "metaForProperty",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "eachComputedProperty",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "_onLookup",
      "isPrivate": true,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "_lazyInjections",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "get",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "getProperties",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "set",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "setProperties",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "beginPropertyChanges",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "endPropertyChanges",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "propertyWillChange",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "propertyDidChange",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "notifyPropertyChange",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "addObserver",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "removeObserver",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "hasObserverFor",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "getWithDefault",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "incrementProperty",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "decrementProperty",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "toggleProperty",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "cacheFor",
      "isPrivate": false,
      "inheritedFrom": "Ember.Observable"
    },
    {
      "name": "willMergeMixin",
      "isPrivate": true,
      "inheritedFrom": "Ember.ActionHandler"
    },
    {
      "name": "send",
      "isPrivate": false,
      "inheritedFrom": "Ember.ActionHandler"
    },
    {
      "name": "_updateCacheParams",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "_qpChanged",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "_calculateCacheKey",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "transitionToRoute",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "transitionTo",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "replaceRoute",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "replaceWith",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "controllerFor",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    }
  ],
  "properties": [
    {
      "name": "concatenatedProperties",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "isDestroyed",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "isDestroying",
      "isPrivate": false,
      "inheritedFrom": "Ember.CoreObject"
    },
    {
      "name": "actions",
      "isPrivate": false,
      "inheritedFrom": "Ember.ActionHandler"
    },
    {
      "name": "target",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "model",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "queryParams",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "_qpDelegate",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "_normalizedQueryParams",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "_cacheMeta",
      "isPrivate": true,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "needs",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    },
    {
      "name": "controllers",
      "isPrivate": false,
      "inheritedFrom": "Ember.ControllerMixin"
    }
  ],
  "events": [],
  "isPrivate": false,
  "constType": "Class"
}