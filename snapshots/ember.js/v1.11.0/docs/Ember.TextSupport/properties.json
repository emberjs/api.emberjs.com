[
  {
    "file": "packages/ember-views/lib/mixins/attribute_bindings_support.js",
    "line": 13,
    "description": "<p>A list of properties of the view to apply as attributes. If the property is\na string value, the value of that string will be applied as the attribute.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n6\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-comment\">// Applies the type attribute to the element</span>\n<span class=\"hljs-comment\">// with the value \"button\", like &lt;div type=\"button\"&gt;</span>\nEmber.View.extend({\n  attributeBindings: [<span class=\"hljs-string\">'type'</span>],\n  type: <span class=\"hljs-string\">'button'</span>\n});</pre></td>      </tr>    </table>  </div></div><p>If the value of the property is a Boolean, the name of that property is\nadded as an attribute.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-comment\">// Renders something like &lt;div enabled=\"enabled\"&gt;</span>\nEmber.View.extend({\n  attributeBindings: [<span class=\"hljs-string\">'enabled'</span>],\n  enabled: <span class=\"hljs-literal\">true</span>\n});</pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "property",
    "name": "attributeBindings",
    "class": "Ember.TextSupport",
    "module": "ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/class_names_support.js",
    "line": 33,
    "description": "<p>Standard CSS class names to apply to the view&#39;s outer element. This\nproperty automatically inherits any class names defined by the view&#39;s\nsuperclasses as well.</p>\n",
    "itemtype": "property",
    "name": "classNames",
    "type": "Array",
    "default": "['ember-view']",
    "class": "Ember.TextSupport",
    "module": "ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/class_names_support.js",
    "line": 44,
    "description": "<p>A list of properties of the view to apply as class names. If the property\nis a string value, the value of that string will be applied as a class\nname.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-comment\">// Applies the 'high' class to the view element</span>\nEmber.View.extend({\n  classNameBindings: [<span class=\"hljs-string\">'priority'</span>]\n  priority: <span class=\"hljs-string\">'high'</span>\n});</pre></td>      </tr>    </table>  </div></div><p>If the value of the property is a Boolean, the name of that property is\nadded as a dasherized class name.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-comment\">// Applies the 'is-urgent' class to the view element</span>\nEmber.View.extend({\n  classNameBindings: [<span class=\"hljs-string\">'isUrgent'</span>]\n  isUrgent: <span class=\"hljs-literal\">true</span>\n});</pre></td>      </tr>    </table>  </div></div><p>If you would prefer to use a custom value instead of the dasherized\nproperty name, you can pass a binding like this:</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-comment\">// Applies the 'urgent' class to the view element</span>\nEmber.View.extend({\n  classNameBindings: [<span class=\"hljs-string\">'isUrgent:urgent'</span>]\n  isUrgent: <span class=\"hljs-literal\">true</span>\n});</pre></td>      </tr>    </table>  </div></div><p>This list of properties is inherited from the view&#39;s superclasses as well.</p>\n",
    "itemtype": "property",
    "name": "classNameBindings",
    "type": "Array",
    "default": "[]",
    "class": "Ember.TextSupport",
    "module": "ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/instrumentation_support.js",
    "line": 6,
    "description": "<p>Used to identify this view during debugging</p>\n",
    "itemtype": "property",
    "name": "instrumentDisplay",
    "type": "String",
    "class": "Ember.TextSupport",
    "module": "ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/text_support.js",
    "line": 134,
    "description": "<p>The action to be sent when the user presses the return key.</p>\n<p>This is similar to the <code>{{action}}</code> helper, but is fired when\nthe user presses the return key when editing a text field, and sends\nthe value of the field as the context.</p>\n",
    "itemtype": "property",
    "name": "action",
    "type": "String",
    "default": "null",
    "class": "Ember.TextSupport",
    "module": "ember",
    "submodule": "ember-views",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/text_support.js",
    "line": 147,
    "description": "<p>The event that should send the action.</p>\n<p>Options are:</p>\n<ul>\n<li><code>enter</code>: the user pressed enter</li>\n<li><code>keyPress</code>: the user pressed a key</li>\n</ul>\n",
    "itemtype": "property",
    "name": "onEvent",
    "type": "String",
    "default": "enter",
    "class": "Ember.TextSupport",
    "module": "ember",
    "submodule": "ember-views",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-views/lib/mixins/text_support.js",
    "line": 161,
    "description": "<p>Whether the <code>keyUp</code> event that triggers an <code>action</code> to be sent continues\npropagating to other views.</p>\n<p>By default, when the user presses the return key on their keyboard and\nthe text field has an <code>action</code> set, the action will be sent to the view&#39;s\ncontroller and the key event will stop propagating.</p>\n<p>If you would like parent views to receive the <code>keyUp</code> event even after an\naction has been dispatched, set <code>bubbles</code> to true.</p>\n",
    "itemtype": "property",
    "name": "bubbles",
    "type": "Boolean",
    "default": "false",
    "class": "Ember.TextSupport",
    "module": "ember",
    "submodule": "ember-views",
    "namespace": "Ember"
  }
]