[
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 135,
    "description": "<p>Apply formatting options to the string. This will look for occurrences\nof &quot;%@&quot; in your string and substitute them with the arguments you pass into\nthis method. If you want to control the specific order of replacement,\nyou can add a number after the key as well to indicate which argument\nyou want to insert.</p>\n<p>Ordered insertions are most useful when building loc strings where values\nyou need to insert may appear in different orders.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">\"Hello %@ %@\"</span>.fmt(<span class=\"hljs-string\">'John'</span>, <span class=\"hljs-string\">'Doe'</span>);     <span class=\"hljs-comment\">// \"Hello John Doe\"</span>\n<span class=\"hljs-string\">\"Hello %@2, %@1\"</span>.fmt(<span class=\"hljs-string\">'John'</span>, <span class=\"hljs-string\">'Doe'</span>);  <span class=\"hljs-comment\">// \"Hello Doe, John\"</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "fmt",
    "params": [
      {
        "name": "str",
        "description": "The string to format",
        "type": "String"
      },
      {
        "name": "formats",
        "description": "An array of parameters to interpolate into string.",
        "type": "Array"
      }
    ],
    "return": {
      "description": "formatted string",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 157,
    "description": "<p>Formats the passed string, but first looks up the string in the localized\nstrings hash. This is a convenient way to localize text. See\n<code>Ember.String.fmt()</code> for more information on formatting.</p>\n<p>Note that it is traditional but not required to prefix localized string\nkeys with an underscore or other character so you can easily identify\nlocalized strings.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n6\n7\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\">Ember.STRINGS = {\n  <span class=\"hljs-string\">'_Hello World'</span>: <span class=\"hljs-string\">'Bonjour le monde'</span>,\n  <span class=\"hljs-string\">'_Hello %@ %@'</span>: <span class=\"hljs-string\">'Bonjour %@ %@'</span>\n};\n\nEmber.String.loc(<span class=\"hljs-string\">\"_Hello World\"</span>);  <span class=\"hljs-comment\">// 'Bonjour le monde';</span>\nEmber.String.loc(<span class=\"hljs-string\">\"_Hello %@ %@\"</span>, [<span class=\"hljs-string\">\"John\"</span>, <span class=\"hljs-string\">\"Smith\"</span>]);  <span class=\"hljs-comment\">// \"Bonjour John Smith\";</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "loc",
    "params": [
      {
        "name": "str",
        "description": "The string to format",
        "type": "String"
      },
      {
        "name": "formats",
        "description": "Optional array of parameters to interpolate into string.",
        "type": "Array"
      }
    ],
    "return": {
      "description": "formatted string",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 183,
    "description": "<p>Splits a string into separate units separated by spaces, eliminating any\nempty strings in the process. This is a convenience method for split that\nis mostly useful when applied to the <code>String.prototype</code>.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n6\n7\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\">Ember.String.w(<span class=\"hljs-string\">\"alpha beta gamma\"</span>).forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(key)</span> </span>{\n  <span class=\"hljs-built_in\">console</span>.log(key);\n});\n\n<span class=\"hljs-comment\">// &gt; alpha</span>\n<span class=\"hljs-comment\">// &gt; beta</span>\n<span class=\"hljs-comment\">// &gt; gamma</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "w",
    "params": [
      {
        "name": "str",
        "description": "The string to split",
        "type": "String"
      }
    ],
    "return": {
      "description": "array containing the split strings",
      "type": "Array"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 204,
    "description": "<p>Converts a camelized string into all lower case separated by underscores.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.decamelize();           <span class=\"hljs-comment\">// 'inner_html'</span>\n<span class=\"hljs-string\">'action_name'</span>.decamelize();        <span class=\"hljs-comment\">// 'action_name'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.decamelize();     <span class=\"hljs-comment\">// 'css-class-name'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.decamelize();  <span class=\"hljs-comment\">// 'my favorite items'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "decamelize",
    "params": [
      {
        "name": "str",
        "description": "The string to decamelize.",
        "type": "String"
      }
    ],
    "return": {
      "description": "the decamelized string.",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 220,
    "description": "<p>Replaces underscores, spaces, or camelCase with dashes.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.dasherize();          <span class=\"hljs-comment\">// 'inner-html'</span>\n<span class=\"hljs-string\">'action_name'</span>.dasherize();        <span class=\"hljs-comment\">// 'action-name'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.dasherize();     <span class=\"hljs-comment\">// 'css-class-name'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.dasherize();  <span class=\"hljs-comment\">// 'my-favorite-items'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "dasherize",
    "params": [
      {
        "name": "str",
        "description": "The string to dasherize.",
        "type": "String"
      }
    ],
    "return": {
      "description": "the dasherized string.",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 236,
    "description": "<p>Returns the lowerCamelCase form of a string.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n5\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.camelize();          <span class=\"hljs-comment\">// 'innerHTML'</span>\n<span class=\"hljs-string\">'action_name'</span>.camelize();        <span class=\"hljs-comment\">// 'actionName'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.camelize();     <span class=\"hljs-comment\">// 'cssClassName'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.camelize();  <span class=\"hljs-comment\">// 'myFavoriteItems'</span>\n<span class=\"hljs-string\">'My Favorite Items'</span>.camelize();  <span class=\"hljs-comment\">// 'myFavoriteItems'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "camelize",
    "params": [
      {
        "name": "str",
        "description": "The string to camelize.",
        "type": "String"
      }
    ],
    "return": {
      "description": "the camelized string.",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 253,
    "description": "<p>Returns the UpperCamelCase form of a string.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.classify();          <span class=\"hljs-comment\">// 'InnerHTML'</span>\n<span class=\"hljs-string\">'action_name'</span>.classify();        <span class=\"hljs-comment\">// 'ActionName'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.classify();     <span class=\"hljs-comment\">// 'CssClassName'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.classify();  <span class=\"hljs-comment\">// 'MyFavoriteItems'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "classify",
    "params": [
      {
        "name": "str",
        "description": "the string to classify",
        "type": "String"
      }
    ],
    "return": {
      "description": "the classified string",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 269,
    "description": "<p>More general than decamelize. Returns the lower_case_and_underscored\nform of a string.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.underscore();          <span class=\"hljs-comment\">// 'inner_html'</span>\n<span class=\"hljs-string\">'action_name'</span>.underscore();        <span class=\"hljs-comment\">// 'action_name'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.underscore();     <span class=\"hljs-comment\">// 'css_class_name'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.underscore();  <span class=\"hljs-comment\">// 'my_favorite_items'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "underscore",
    "params": [
      {
        "name": "str",
        "description": "The string to underscore.",
        "type": "String"
      }
    ],
    "return": {
      "description": "the underscored string.",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-runtime/lib/system/string.js",
    "line": 286,
    "description": "<p>Returns the Capitalized form of a string</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n2\n3\n4\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\"><span class=\"hljs-string\">'innerHTML'</span>.capitalize()         <span class=\"hljs-comment\">// 'InnerHTML'</span>\n<span class=\"hljs-string\">'action_name'</span>.capitalize()       <span class=\"hljs-comment\">// 'Action_name'</span>\n<span class=\"hljs-string\">'css-class-name'</span>.capitalize()    <span class=\"hljs-comment\">// 'Css-class-name'</span>\n<span class=\"hljs-string\">'my favorite items'</span>.capitalize() <span class=\"hljs-comment\">// 'My favorite items'</span></pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "capitalize",
    "params": [
      {
        "name": "str",
        "description": "The string to capitalize.",
        "type": "String"
      }
    ],
    "return": {
      "description": "The capitalized string.",
      "type": "String"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-runtime",
    "namespace": "Ember"
  },
  {
    "file": "packages/ember-htmlbars/lib/utils/string.js",
    "line": 13,
    "description": "<p>Mark a string as safe for unescaped output with Handlebars. If you\nreturn HTML from a Handlebars helper, use this function to\nensure Handlebars does not escape the HTML.</p>\n<div class=\"highlight javascript\">  <div class=\"ribbon\"></div>  <div class=\"scroller\">    <table class=\"CodeRay\">      <tr>        <td class=\"line-numbers\">          <pre>1\n</pre>        </td>        <td class=\"code\"><pre class=\"javascript\">Ember.String.htmlSafe(<span class=\"hljs-string\">'&lt;div&gt;someString&lt;/div&gt;'</span>)</pre></td>      </tr>    </table>  </div></div>",
    "itemtype": "method",
    "name": "htmlSafe",
    "static": 1,
    "return": {
      "description": "a string that will not be html escaped by Handlebars",
      "type": "Handlebars.SafeString"
    },
    "class": "Ember.String",
    "module": "ember",
    "submodule": "ember-htmlbars",
    "namespace": "Ember"
  }
]